description: |-
  Copyright 2021 <UCLA Mobility Lab>
  Author: Runsheng Xu <rxx3386@ucla.edu>
  Content: This is the scenario testing configuration file for platooning joining and cooperative merge
           at the Town06 using  CARLA only.

# define carla simulation setting
world:
  sync_mode: true
  client_port: 2000
  fixed_delta_seconds: &delta 0.05

# First define the basic parameters of the vehicles
vehicle_base: &vehicle_base
  sensing: &base_sensing
    perception: &base_perception
      activate: false # when not activated, objects positions will be retrieved from server directly
      camera_visualize: 0 # how many camera images need to be visualized. 0 means no visualization for camera
      camera_num: 0 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
      lidar_visualize: false # whether to visualize lidar points using open3d
      lidar: # lidar sensor configuration, check CARLA sensor reference for more details
        channels: 32
        range: 50
        points_per_second: 100000
        rotation_frequency: 20 # the simulation is 20 fps
        upper_fov: 15.0
        lower_fov: -30.0
        dropoff_general_rate: 0.0
        dropoff_intensity_limit: 1.0
        dropoff_zero_intensity: 0.0
        noise_stddev: 0.0
    localization: &base_localize
      activate: true # when not activated, ego position will be retrieved from server directly
      dt: *delta # used for kalman filter
      gnss: # gnss sensor configuration
        noise_alt_stddev: 0.005
        noise_lat_stddev: 2e-6
        noise_lon_stddev: 2e-6
        heading_direction_stddev: 0.1 # degree
        speed_stddev: 0.2
      debug_helper: &loc_debug_helper
        show_animation: false # whether to show real-time trajectory plotting
        x_scale: 10.0 # used to multiply with the x coordinate to make the error on x axis clearer
        y_scale: 10.0 # used to multiply with the y coordinate to make the error on y axis clearer
  behavior: &base_behavior
    max_speed: 70 # maximum speed, km/h
    tailgate_speed: 80 # when a vehicles needs to be close to another vehicle asap
    speed_lim_dist: 3 # max_speed - speed_lim_dist = target speed
    speed_decrease: 15 # used in car following mode to decrease speed for distance keeping
    safety_time: 4 # ttc safety thresholding for decreasing speed
    emergency_param: 0.4 # used to identify whether a emergency stop needed
    ignore_traffic_light: true # whether to ignore traffic light
    overtake_allowed: false # whether overtake allowed, typically false for platoon leader
    collision_time_ahead: 1.1 # used for collision checking
    overtake_counter_recover: 35 # the vehicle can not do another overtake during next certain steps
    sample_resolution: 4.5 # the unit distance between two adjacent waypoints in meter
    local_planner: &base_local_planner # trajectory planning related
      buffer_size: 12 # waypoint buffer size
      trajectory_update_freq: 15 # used to control trajectory points updating frequency
      waypoint_update_freq: 12 # used to control waypoint updating frequency
      min_dist: 3 # used to pop out the waypoints too close to current location
      trajectory_dt: 0.20 # for every dt seconds, we sample a trajectory point from the trajectory path as next goal state
      debug: false # whether to draw future/history waypoints
      debug_trajectory: false # whether to draw the trajectory points and path
  controller: &base_controller
    type: pid_controller # this has to be exactly the same name as the controller py file
    args: &control_args
      lat:
        k_p: 0.75
        k_d: 0.02
        k_i: 0.4
      lon:
        k_p: 0.37
        k_d: 0.024
        k_i: 0.032
      dynamic: false # whether use dynamic pid setting
      dt: *delta # this should be equal to your simulation time-step
      max_brake: 1.0
      max_throttle: 1.0
      max_steering: 0.3
  v2x: &base_v2x # comminuation related
    enabled: true
    communication_range: 35

# define the platoon basic characteristics
platoon_base: &platoon_base
  max_capacity: 10
  inter_gap: 0.6 # desired time gap
  open_gap: 1.2 # open gap
  warm_up_speed: 30 # required speed before cooperative merging


# define the background traffic control by carla
carla_traffic_manager:
  sync_mode: true # has to be same as the world setting
  global_distance: 4.0 # the minimum distance in meters that vehicles have to keep with the rest
  # Sets the difference the vehicle's intended speed and its current speed limit.
  #  Carla default speed is 30 km/h, so -100 represents 60 km/h,
  # and 20 represents 24 km/h
  global_speed_perc: -50
  set_osm_mode: true # Enables or disables the OSM mode.
  auto_lane_change: false
  vehicle_list:
    - spawn_position: [101.7194, 136.51, 0.3, 0, 0, 0]
      vehicle_speed_perc: -200
    - spawn_position: [57.7194, 143.51, 0.3, 0, 0, 0]
    - spawn_position: [75.7194, 139.51, 0.3, 0, 0, 0]
      vehicle_speed_perc: 0
    - spawn_position: [161.7194, 139.51, 0.3, 0, 0, 0]
      vehicle_speed_perc: -300
    - spawn_position: [ 141.7194, 139.51, 0.3, 0, 0, 0 ]
      vehicle_speed_perc: -300

# define scenario. In this scenario, a 4-vehicle platoon already exists.
scenario:
  platoon_list:
    - <<: *platoon_base
      destination: [630, 141.39, 0.3]
      members: # the first one is regarded as leader by default
        - <<: *vehicle_base
          spawn_position: [121.7194, 139.51, 0.3, 0, 0, 0] # x, y, z, roll, yaw, pitch
          platoon: # we need to add platoon specific params
            <<: *platoon_base
          sensing:
            <<: *base_sensing
            perception:
              <<: *base_perception
              activate: true
              camera_visualize: 1
              camera_num: 1
              lidar_visualize: true
          behavior:
            <<: *base_behavior
            local_planner:
              <<: *base_local_planner
              debug_trajectory: true
              debug: false
        - <<: *vehicle_base
          spawn_position: [111.7194, 139.51, 0.3, 0, 0, 0]
          platoon: # we need to add platoon specific params
            <<: *platoon_base
        - <<: *vehicle_base
          spawn_position: [101.7194, 139.51, 0.3, 0, 0, 0]
          platoon: # we need to add platoon specific params
            <<: *platoon_base
        - <<: *vehicle_base
          spawn_position: [91.7194, 139.51, 0.3, 0, 0, 0]
          platoon: # we need to add platoon specific params
            <<: *platoon_base


  single_cav_list: # this is for merging vehicle or single cav without v2x
    - <<: *vehicle_base
      spawn_position: [47.7194, 143.51, 0.3, 0, 0, 0]
      destination: [606.87, 145.39, 0]
      sensing:
        <<: *base_sensing
        perception:
          <<: *base_perception
          activate: true
          camera_visualize: 1
          camera_num: 3
          lidar_visualize: true
        localization:
          <<: *base_localize
          debug_helper:
            <<: *loc_debug_helper
            show_animation: false
      v2x:
        <<: *base_v2x
        communication_range: 35
      platoon: # we need to add platoon specific params
        <<: *platoon_base
      behavior:
        <<: *base_behavior
        max_speed: 65 # maximum speed, km/h
        tailgate_speed: 75
        overtake_allowed: true
        local_planner:
          <<: *base_local_planner
          debug_trajectory: true
          debug: false


